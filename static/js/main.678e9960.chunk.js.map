{"version":3,"sources":["assets/images/search-black-18dp.svg","assets/images/book-24px.svg","store/wordSlice.js","store/searchSlice.js","components/SearchIcon/index.js","components/Input/index.js","components/Search/index.js","components/Button/index.js","components/Lexeme/index.js","components/LexemeList/index.js","components/Audio/index.js","components/Pronuntiation/index.js","components/PronunciationList/index.js","components/Card/index.js","components/CardList/index.js","services/dictionary.js","util/SessionStorage.js","store/authSlice.js","components/Header/index.js","components/Footer/index.js","components/View/index.js","pages/SearchPage/index.js","pages/LogoutPage/index.js","store/imagesSlice.js","components/Image/index.js","components/ImageList/index.js","pages/PostsPage/index.js","routes/SignedRoutes.js","services/auth.js","pages/LoginPage/index.js","pages/HomePage/index.js","pages/RegisterPage/index.js","routes/UnsignedRoutes.js","routes/index.js","app/index.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","wordSlice","createSlice","name","initialState","entries","reducers","setEntries","state","action","payload","entries_map","word","wordActions","actions","searchSlice","text","setText","text_map","search","searchActions","searchIconStyle","backgroundImage","searchIcon","backgroundColor","backgroundRepeat","backgroundSize","backgroundAttachment","Input","useSelector","dispatch","useDispatch","htmlFor","hidden","id","className","type","title","required","value","style","onChange","evt","target","autoFocus","Search","Button","onClick","Lexeme","lexeme","senses","map","sense","index","key","definition","LexemesList","lexemes","Audio","audio","url","controls","src","Pronunciation","pronunciation","PronunciationList","pronunciations","Card","entrie","CardList","apiUrl","dictionary","axios","create","baseURL","SessionStorage","token","deleteSession","localStorage","setItem","getItem","removeItem","authSlice","isLogged","isLoggedIn","setLogged","isLogged_map","session","authActions","Header","logo","alt","data-letter","to","Footer","href","View","props","children","SearchPage","useState","isLoading","setIsLoading","a","preventDefault","get","headers","getSession","resp","data","console","log","autoComplete","length","LogoutPage","history","useHistory","useEffect","push","imageSlice","images","setImages","images_map","image","imageActions","Image","file","ImageList","imgs","img","PostsPage","getFiles","SignedRoutes","path","exact","component","auth","LoginPage","email","setEmail","password","setPassword","errorMessage","setErrorMessage","post","then","saveSession","catch","error","response","Breadcrumbs","aria-label","color","aria-current","placeholder","HomePage","RegisterPage","isPasswordValid","setIsValidPassword","passwordRetyped","setPasswordRetyped","UnsignedRoutes","Routes","App","Boolean","window","location","hostname","match","configureStore","reducer","wordReducer","searchReducer","authReducer","imageReducer","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.678e9960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-black-18dp.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/book-24px.9a22c7f5.svg\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const wordSlice = createSlice({\n  name: 'word',\n  initialState: {entries: []},\n  reducers: {\n    setEntries: (state, action) => {\n      state.entries = action.payload.entries;\n      return state;\n    }\n  }\n})\n\nexport const entries_map = (state) => state.word.entries;\nexport const wordActions = wordSlice.actions;\nexport default wordSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState: {text: \"example\"},\n  reducers: {\n    setText: (state, action) => {\n      state.text = action.payload;\n      return state;\n    }\n  }\n})\n\nexport const text_map = (state) => state.search.text;\nexport const searchActions = searchSlice.actions;\nexport default searchSlice.reducer;\n","import searchIcon from \"../../assets/images/search-black-18dp.svg\";\n\nconst style = {\n  backgroundImage: `url(${searchIcon})`,\n  backgroundColor: 'white',\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: '20px 30px',\n  backgroundAttachment: 'scroll',\n}\n\nexport const searchIconStyle = style;\n","import React from \"react\";\nimport {searchActions, text_map} from \"../../store/searchSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./styles.css\";\nimport {searchIconStyle} from \"../SearchIcon\";\n\nexport default function Input() {\n  const text = useSelector(text_map);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label htmlFor=\"input-search\" hidden>Search words:</label>\n      <input id=\"input-search\"\n             className=\"hover-effect\"\n             type=\"text\"\n             title=\"Search field\"\n             required\n             value={text}\n             style={searchIconStyle}\n             onChange={evt => dispatch(searchActions.setText(evt.target.value))}\n             autoFocus />\n    </>\n  )\n}\n","import React from \"react\";\nimport Input from \"../Input\";\nimport \"./styles.css\";\n\nexport default function Search() {\n  return (\n    <div className=\"container-search\">\n      <Input />\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\nexport default function Button({onClick, type, text}) {\n  return (\n    <div className=\"container-button\">\n      <button className=\"hover-effect\" type={type} onClick={onClick} >{text}</button>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function Lexeme({lexeme}) {\n  return (\n    <>\n      {\n        lexeme.senses ? lexeme.senses.map((sense, index) => <p key={index}>{sense.definition}</p>) : null\n      }\n    </>\n  )\n}\n","import React from \"react\";\nimport Lexeme from \"../Lexeme\";\n\nexport default function LexemesList({lexemes}) {\n  return (\n    <div className=\"container-lexemes\">\n      <h4>Definitions:</h4>\n      {\n        lexemes && lexemes.map((lexeme, index) => <Lexeme key={index} lexeme={lexeme} />)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function Audio({audio}) {\n  return (\n    <div>\n      {\n        audio.url\n          ?\n          <audio controls=\"controls\">\n              <source src={audio.url} type=\"audio/mp3\" />seu navegador não suporta HTML5\n          </audio>\n          :\n          null\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport Audio from \"../Audio\";\n\nexport default function Pronunciation({pronunciation}) {\n  return (\n    <>\n      {\n        pronunciation.audio ? <Audio audio={pronunciation.audio}/> : null\n      }\n    </>\n  )\n}\n","import React from \"react\";\nimport Pronunciation from \"../Pronuntiation\";\n\nexport default function PronunciationList({pronunciations}) {\n  return (\n    <div className=\"container-pronuntiations\">\n      <h4>Pronuntiations:</h4>\n      {\n        pronunciations &&\n        pronunciations.map((pronunciation, index) => <Pronunciation key={index} pronunciation={pronunciation} />)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport LexemesList from \"../LexemeList\";\nimport PronunciationList from \"../PronunciationList\";\n\nexport default function Card({entrie}) {\n  return (\n    <div className=\"container container-card hover-effect\">\n      <LexemesList lexemes={entrie.lexemes}/>\n      <PronunciationList pronunciations={entrie.pronunciations} />\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport {useSelector} from \"react-redux\";\nimport {entries_map} from \"../../store/wordSlice\";\nimport Card from \"../Card\";\n\nexport default function CardList() {\n  const entries = useSelector(entries_map);\n\n  return (\n    <div className=\"container-cards\">\n      {\n        entries.map((entrie, index) => <Card key={index} entrie={entrie} />)\n      }\n    </div>\n  )\n}\n","import axios from 'axios';\nconst apiUrl = \"https://dictionary-express.herokuapp.com/\";\nconst dictionary = axios.create({\n  baseURL: apiUrl\n});\n\nexport default dictionary;\nexport const DICTIONARY_URL = apiUrl;\n","export default class SessionStorage {\n  static saveSession(token) {\n    SessionStorage.deleteSession();\n    localStorage.setItem(\"token\", token);\n  }\n\n  static getSession() {\n    return localStorage.getItem(\"token\");\n  }\n\n  static deleteSession() {\n    localStorage.removeItem(\"token\");\n  }\n\n  static isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport SessionStorage from \"../util/SessionStorage\";\n\nexport const authSlice = createSlice({\n  name: 'session',\n  initialState: {isLogged: SessionStorage.isLoggedIn()},\n  reducers: {\n    setLogged: (state, action) => {\n      state.isLogged = action.payload;\n      return state;\n    }\n  }\n})\n\nexport const isLogged_map = (state) => state.session.isLogged;\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;\n","import React from \"react\";\nimport logo from \"../../assets/images/book-24px.svg\";\nimport \"./styles.css\";\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {isLogged_map} from \"../../store/authSlice\";\n\nexport default function Header() {\n  const isLogged = useSelector(isLogged_map);\n\n  function renderNavBarRight() {\n    return(\n      <ul className=\"menu\">\n        <li><Link to=\"/posts\">My posts</Link></li>\n        <li><Link to=\"/logout\">Sign out</Link></li>\n      </ul>\n    )\n  }\n\n  return (\n    <header className={isLogged ? \"container-header\" : \"container-header big\"}>\n      <div className=\"navbar-left\">\n        <div className=\"title\">\n          <img src={logo} alt=\"Open book\" />\n          <h1 title=\"Dictionary\"><span className=\"letter\" data-letter=\"D\">D</span>ictionary</h1>\n        </div>\n        <ul className=\"menu\">\n          {isLogged ? <li><Link to=\"/\">Lingua Robot</Link></li> : null }\n        </ul>\n      </div>\n\n      <div className=\"navbar-right\">\n        {\n          isLogged ? renderNavBarRight() : <Link to=\"/login\">Sign in</Link>\n        }\n      </div>\n    </header>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"container-footer\">\n      <p>API: <a href=\"https://www.linguarobot.io/\">Lingua Robot</a></p>\n    </footer>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nexport default function View(props) {\n  return (\n    <>\n      <Header />\n      <main>{props.children}</main>\n      <Footer />\n    </>\n  )\n}\n","import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {entries_map, wordActions} from \"../../store/wordSlice\";\nimport Search from \"../../components/Search\";\nimport Button from \"../../components/Button\";\nimport CardList from \"../../components/CardList\";\nimport \"./styles.css\";\nimport {text_map} from \"../../store/searchSlice\";\nimport dictionary from \"../../services/dictionary\";\nimport SessionStorage from \"../../util/SessionStorage\";\nimport View from \"../../components/View\";\n\nexport default function SearchPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const entries = useSelector(entries_map);\n  const text = useSelector(text_map);\n  const dispatch = useDispatch();\n\n  async function search(evt) {\n    evt.preventDefault();\n\n    if (isLoading) return;\n\n    setIsLoading(true);\n\n    try {\n      const resp = await dictionary.get(`search?word=${text}`,\n        {\n          headers: {\n            'Authorization': 'Bearer ' + SessionStorage.getSession(),\n          }\n        }\n      );\n\n      dispatch(wordActions.setEntries(resp.data));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setIsLoading(false);\n    return null;\n  }\n\n  return (\n    <View>\n      <div className=\"container-search\">\n        <h2>Search words in Lingua Robot</h2>\n        <form autoComplete=\"off\">\n          <Search />\n          <Button onClick={search} type=\"submit\" text={isLoading ? \"...Loading\" : \"Search\"} />\n        </form>\n        <div>{entries.length ? <CardList /> : null}</div>\n      </div>\n    </View>\n  )\n}\n","import React, {useEffect} from \"react\";\nimport SessionStorage from \"../../util/SessionStorage\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {authActions} from \"../../store/authSlice\";\nimport {wordActions} from \"../../store/wordSlice\";\n\nexport default function LogoutPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  function doLogout() {\n    SessionStorage.deleteSession();\n    dispatch(authActions.setLogged(false));\n    dispatch(wordActions.setEntries({entries: []}));\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    doLogout()\n  })\n\n  return (<></>);\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const imageSlice = createSlice({\n  name: 'image',\n  initialState: {images: []},\n  reducers: {\n    setImages: (state, action) => {\n      state.images = action.payload;\n      return state;\n    }\n  }\n})\n\nexport const images_map = (state) => state.image.images;\nexport const imageActions = imageSlice.actions;\nexport default imageSlice.reducer;\n","import React from \"react\";\nimport \"./styles.css\";\nimport {DICTIONARY_URL} from \"../../services/dictionary\";\n\nexport default function Image({file}) {\n  return (\n    <div className=\"container-image\">\n      <img src={DICTIONARY_URL+file.url}  alt={file.name}/>\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport {useSelector} from \"react-redux\";\nimport {images_map} from \"../../store/imagesSlice\";\nimport Image from \"../Image\";\n\nexport default function ImageList() {\n  const imgs = useSelector(images_map);\n\n  return (\n    <div className=\"container-images\">\n      {\n        imgs.map((img, index) => <Image key={index} file={img} />)\n      }\n    </div>\n  )\n}\n","import React, {useState, useEffect} from \"react\";\nimport \"./styles.css\";\nimport View from \"../../components/View\";\nimport dictionary from \"../../services/dictionary\";\nimport SessionStorage from \"../../util/SessionStorage\";\nimport {imageActions} from \"../../store/imagesSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {images_map} from \"../../store/imagesSlice\";\nimport ImageList from \"../../components/ImageList\";\nimport Button from \"../../components/Button\";\n\nexport default function PostsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const imgs = useSelector(images_map);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      async function getFiles() {\n        if (isLoading || !imgs) {\n          return;\n        }\n\n        setIsLoading(true);\n\n        try {\n          const resp = await dictionary.get('file',\n            {\n              headers: {\n                'Authorization': 'Bearer ' + SessionStorage.getSession(),\n              }\n            }\n          );\n          dispatch(imageActions.setImages(resp.data));\n        } catch (error) {\n          console.log(error);\n        }\n        setIsLoading(false);\n      }\n      getFiles();\n    },\n    [dispatch, imgs, isLoading],\n  );\n\n  return (\n    <View>\n      <div className=\"container-posts\">\n        <form>\n          <label htmlFor=\"posts-img\">Choose a picture:</label>\n          <input id=\"posts-img\" type=\"file\" name=\"file\" />\n          <Button text=\"Send\" />\n        </form>\n        {imgs.length ? <ImageList /> : null}\n      </div>\n    </View>\n  )\n}\n","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport SearchPage from \"../pages/SearchPage\";\nimport LogoutPage from \"../pages/LogoutPage\";\nimport PostsPage from \"../pages/PostsPage\";\n\nexport default function SignedRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={SearchPage} />\n      <Route path=\"/posts\" exact component={PostsPage} />\n      <Route path=\"/logout\" exact component={LogoutPage} />\n    </Switch>\n  )\n}\n","import axios from 'axios';\n\nconst auth = axios.create({\n  baseURL: \"https://dictionary-express.herokuapp.com/auth/\"\n});\n\nexport default auth;\n","import React, {useState} from \"react\";\nimport \"./styles.css\";\nimport auth from \"../../services/auth\";\nimport Button from \"../../components/Button\";\nimport SessionStorage from \"../../util/SessionStorage\";\nimport {useDispatch} from \"react-redux\";\nimport {authActions} from \"../../store/authSlice\";\nimport {Link, useHistory} from 'react-router-dom';\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport View from \"../../components/View\";\n\nexport default function LoginPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  async function doLogin(evt) {\n    evt.preventDefault();\n\n    if (isLoading) return;\n\n    setIsLoading(true);\n    auth.post('/login', {\n      email: email,\n      password: password\n    })\n    .then(resp => {\n      if (resp.data && resp.data.token) {\n        SessionStorage.saveSession(resp.data.token);\n        dispatch(authActions.setLogged(true));\n        history.push(\"/\");\n      }\n    })\n    .catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        setErrorMessage(`Login error: ${error.response.data.error}`)\n      } else {\n        setErrorMessage(`Unexpected error`)\n      }\n    });\n    setIsLoading(false);\n  }\n\n  function renderErrorMessage() {\n    if (!errorMessage) {\n      return null;\n    }\n    return (<span className=\"error-message\">{errorMessage}</span>)\n  }\n\n  return (\n     <View>\n        <div className=\"root-login\">\n          <div className=\"container-login\">\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              <Link color=\"inherit\" to=\"/\">Home</Link>\n              <Link\n                color=\"textPrimary\"\n                to=\"/login\"\n                aria-current=\"page\"\n              >\n                Login\n              </Link>\n            </Breadcrumbs>\n            <form>\n              <section>\n                <h2>Login</h2>\n                <div>\n                  <label htmlFor=\"input-email\">E-mail:</label>\n                  <input id=\"input-email\"\n                         className=\"hover-effect\"\n                         type=\"text\"\n                         title=\"Search field\"\n                         placeholder=\"eve.holt@reqres.in\"\n                         required\n                         value={email}\n                         onChange={evt => setEmail(evt.target.value)}\n                         autoFocus />\n                </div>\n\n                <div>\n                  <label htmlFor=\"input-password\">Password:</label>\n                  <input id=\"input-password\"\n                         className=\"hover-effect\"\n                         type=\"password\"\n                         title=\"Search field\"\n                         placeholder=\"cityslicka\"\n                         required\n                         value={password}\n                         onChange={evt => setPassword(evt.target.value)}\n                  />\n                </div>\n\n                {renderErrorMessage()}\n\n                <Button onClick={doLogin} type=\"button\" text={isLoading ? \"...Loading\" : \"Login\"} />\n                <Link className=\"register-link\" to=\"/register\" >Don't have an account?</Link>\n              </section>\n            </form>\n          </div>\n        </div>\n     </View>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport View from \"../../components/View\";\n\nexport default function HomePage() {\n  return (\n    <View>\n      <div className=\"container-home\">\n        <h2 className=\"title\">\n          This site provides an English dictionary using the <a href=\"https://www.linguarobot.io/\">Lingua Robot</a> API.\n        </h2>\n        <span><Link to=\"/login\">Sign in</Link> or <Link to=\"/register\">sign up</Link> to start using.</span>\n      </div>\n    </View>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\";\nimport {useDispatch} from \"react-redux\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport auth from \"../../services/auth\";\nimport SessionStorage from \"../../util/SessionStorage\";\nimport {authActions} from \"../../store/authSlice\";\nimport Button from \"../../components/Button\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport View from \"../../components/View\";\n\nexport default function RegisterPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isPasswordValid, setIsValidPassword] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRetyped, setPasswordRetyped] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  async function doRegister(evt) {\n    evt.preventDefault();\n\n    if (!isPasswordValid) {\n      setErrorMessage(\"passwords don't match\")\n      return\n    }\n\n    if (isLoading) {\n      return\n    }\n\n    setIsLoading(true);\n    auth.post('/register', {\n      email: email,\n      password: password\n    })\n    .then(resp => {\n      if (resp.data && resp.data.token) {\n        SessionStorage.saveSession(resp.data.token);\n        dispatch(authActions.setLogged(true));\n        history.push(\"/\");\n      }\n    })\n    .catch(error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        setErrorMessage(`${error.response.data.error}`)\n      } else {\n        setErrorMessage(`An unexpected error occurred`)\n      }\n    });\n    setIsLoading(false);\n  }\n\n  function renderErrorMessage() {\n    if (!errorMessage) {\n      return null;\n    }\n    if (!isPasswordValid && password.length && passwordRetyped.length) {\n      return (<span className=\"error-message\">passwords don't match</span>)\n    }\n    return (<span className=\"error-message\">{errorMessage}</span>)\n  }\n\n  useEffect(() => {\n    setIsValidPassword(!!(password.length && passwordRetyped.length && password === passwordRetyped));\n    console.log(isPasswordValid)\n  }, [password, passwordRetyped, isPasswordValid])\n\n  return (\n    <View>\n        <div className=\"root-register\">\n          <div className=\"container-register\">\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              <Link color=\"inherit\" to=\"/\">Home</Link>\n              <Link\n                color=\"textPrimary\"\n                to=\"/register\"\n                aria-current=\"page\"\n              >\n                Register\n              </Link>\n            </Breadcrumbs>\n            <form>\n              <section>\n                <h2>Register</h2>\n                <div>\n                  <label htmlFor=\"input-email\">E-mail:</label>\n                  <input id=\"input-email\"\n                         className=\"hover-effect\"\n                         type=\"text\"\n                         title=\"E-mail\"\n                         placeholder=\"example@email.com\"\n                         required\n                         value={email}\n                         onChange={evt => setEmail(evt.target.value)}\n                         autoFocus />\n                </div>\n\n                <div>\n                  <label htmlFor=\"input-password\">Password:</label>\n                  <input id=\"input-password\"\n                         className=\"hover-effect\"\n                         type=\"password\"\n                         title=\"Password\"\n                         placeholder=\"password\"\n                         required\n                         value={password}\n                         onChange={evt => setPassword(evt.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"input-password-retype\">Retype password:</label>\n                  <input id=\"input-password-retype\"\n                         className=\"hover-effect\"\n                         type=\"password\"\n                         title=\"Retype password\"\n                         placeholder=\"password\"\n                         required\n                         value={passwordRetyped}\n                         onChange={evt => setPasswordRetyped(evt.target.value)}\n                  />\n                </div>\n\n                {renderErrorMessage()}\n\n                <Button onClick={doRegister} type=\"button\" text={isLoading ? \"...Loading\" : \"Register\"} />\n                <Link className=\"login-link\" to=\"/login\">I already have an account</Link>\n              </section>\n            </form>\n          </div>\n        </div>\n    </View>\n  )\n}\n","import {Route, Switch} from \"react-router-dom\";\nimport LoginPage from \"../pages/LoginPage\";\nimport React from \"react\";\nimport HomePage from \"../pages/HomePage\";\nimport RegisterPage from \"../pages/RegisterPage\";\n\nexport function UnsignedRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/login\" exact component={LoginPage} />\n      <Route path=\"/register\" exact component={RegisterPage} />\n    </Switch>\n  )\n}\n","import React from \"react\";\nimport { BrowserRouter } from 'react-router-dom';\nimport SignedRoutes from \"./SignedRoutes\";\nimport {UnsignedRoutes} from \"./UnsignedRoutes\";\nimport {useSelector} from \"react-redux\";\nimport {isLogged_map} from \"../store/authSlice\";\n\nexport default function Routes() {\n  const isLogged = useSelector(isLogged_map);\n\n  return (\n    <BrowserRouter>\n      {\n        isLogged ? <SignedRoutes /> : <UnsignedRoutes />\n      }\n    </BrowserRouter>\n  )\n}\n\n\n","import React from 'react';\nimport './styles.css';\nimport Routes from \"../routes\";\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport wordReducer from './wordSlice';\nimport searchReducer from './searchSlice';\nimport authReducer from './authSlice';\nimport imageReducer from './imagesSlice';\n\nexport default configureStore({\n  reducer: {\n    'word': wordReducer,\n    'search': searchReducer,\n    'session': authReducer,\n    'image': imageReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}